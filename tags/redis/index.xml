<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Redis on luanrz's blog</title><link>https://luanrz.github.io/tags/redis/</link><description>Recent content in Redis on luanrz's blog</description><generator>Hugo -- 0.152.0</generator><language>zh-cn</language><lastBuildDate>Tue, 16 May 2023 21:00:00 +0800</lastBuildDate><atom:link href="https://luanrz.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml"/><item><title>Redis分布式ID实现</title><link>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/redis%E5%88%86%E5%B8%83%E5%BC%8Fid%E5%AE%9E%E7%8E%B0/</link><pubDate>Tue, 16 May 2023 21:00:00 +0800</pubDate><guid>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/redis%E5%88%86%E5%B8%83%E5%BC%8Fid%E5%AE%9E%E7%8E%B0/</guid><description>&lt;p&gt;分布式ID的实现方式有多种：UUID、雪花算法、数据库自增ID、数据库序列（Oracle）、Redis等等。下面将以Redis为例实现一个简单的分布式ID。&lt;/p&gt;</description></item><item><title>Redis分布式锁简介</title><link>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%AE%80%E4%BB%8B/</link><pubDate>Fri, 10 Mar 2023 11:01:21 +0800</pubDate><guid>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%AE%80%E4%BB%8B/</guid><description>&lt;p&gt;锁是实现安全访问共享资源的一种同步机制。在单机环境下，Java原生锁可以很好地支持多线程竞争资源时的安全性，分布式环境就行不通了，因为不同的JVM无法共享锁资源。&lt;/p&gt;</description></item><item><title>Redis缓存：分布式缓存配置与多级缓存简介</title><link>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/redis%E7%BC%93%E5%AD%98%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98%E7%AE%80%E4%BB%8B/</link><pubDate>Sun, 19 Feb 2023 22:06:40 +0800</pubDate><guid>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/redis%E7%BC%93%E5%AD%98%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98%E7%AE%80%E4%BB%8B/</guid><description>&lt;p&gt;分布式缓存与多级缓存可以实现服务的高性能和高可用。下面将介绍一下分布式缓存中主从集群与哨兵集群的配置，与多级缓存的基本场景。&lt;/p&gt;
&lt;h2 id="一分布式缓存配置"&gt;一、分布式缓存配置&lt;/h2&gt;
&lt;h3 id="一主从集群"&gt;（一）主从集群&lt;/h3&gt;
&lt;p&gt;主从集群一般由一个负责写的主节点和多个负责读的从节点组成。下面将演示在本机搭建一个三节点的主从集群，它们的端口号分别为：7001、7002、7003，其中，7001为主节点。&lt;/p&gt;</description></item><item><title>Redis缓存：缓存延迟与缓存失效</title><link>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/redis%E7%BC%93%E5%AD%98%E7%BC%93%E5%AD%98%E5%BB%B6%E8%BF%9F%E4%B8%8E%E7%BC%93%E5%AD%98%E5%A4%B1%E6%95%88/</link><pubDate>Sat, 11 Feb 2023 18:48:13 +0800</pubDate><guid>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/redis%E7%BC%93%E5%AD%98%E7%BC%93%E5%AD%98%E5%BB%B6%E8%BF%9F%E4%B8%8E%E7%BC%93%E5%AD%98%E5%A4%B1%E6%95%88/</guid><description>&lt;p&gt;Redis缓存延迟指的是：Redis与数据库发生同步过程中Redis数据状态滞后的现象。缓存延迟涉及到数据一致性与缓存更新策略的选择。&lt;/p&gt;
&lt;p&gt;Redis缓存失效指的是：因为缓存穿透、缓存击穿、缓存雪崩等原因导致Redis缓存查询不到的情况。&lt;/p&gt;</description></item><item><title>Redis缓存：常用数据结构与基本用法</title><link>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/redis%E7%BC%93%E5%AD%98%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link><pubDate>Wed, 08 Feb 2023 09:03:02 +0800</pubDate><guid>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/redis%E7%BC%93%E5%AD%98%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid><description>&lt;p&gt;&lt;a href="https://redis.io/"&gt;Redis&lt;/a&gt;是一种基于内存的高性能NoSQL数据库，它最常见的一种应用场景就是缓存。本文将首先演示Redis的安装过程，随后介绍一些Redis常用的数据结构及其对应的命令，最后将会基于Spring实现Redis的读写。&lt;/p&gt;
&lt;h2 id="一安装redis"&gt;一、安装Redis&lt;/h2&gt;
&lt;p&gt;下面将简单介绍Linux、Mac与Docker安装Redis的过程，更详细的安装说明可以参见&lt;a href="https://redis.io/docs/getting-started/installation/"&gt;Redis安装官方页面&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="一安装redis-1"&gt;（一）安装Redis&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Linux&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo pacman -S redis &lt;span style="color:#75715e"&gt;# ArchLinux&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt install redis &lt;span style="color:#75715e"&gt;# Debian / Ubuntu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Mac&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew install redis
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Docker&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;docker run --name redis1 -dp 6379:6379 redis:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Windows系统可以通过&lt;code&gt;wsl&lt;/code&gt;安装Linux版本的redis。Docker运行Redis可以参见&lt;a href="https://hub.docker.com/_/redis/"&gt;Redos的DockerHub官方页面&lt;/a&gt;。&lt;/p&gt;</description></item></channel></rss>