<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>JVM on luanrz's blog</title><link>https://luanrz.github.io/tags/jvm/</link><description>Recent content in JVM on luanrz's blog</description><generator>Hugo -- 0.152.0</generator><language>zh-cn</language><lastBuildDate>Fri, 24 Jun 2022 08:50:02 +0000</lastBuildDate><atom:link href="https://luanrz.github.io/tags/jvm/index.xml" rel="self" type="application/rss+xml"/><item><title>Java内存模型简介</title><link>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E7%AE%80%E4%BB%8B/</link><pubDate>Fri, 24 Jun 2022 08:50:02 +0000</pubDate><guid>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E7%AE%80%E4%BB%8B/</guid><description>&lt;p&gt;Java内存模型（Java Memory Model，JMM）是Java多线程读写共享内存中的一种规范，该规范支持了&lt;code&gt;synchronized&lt;/code&gt;、&lt;code&gt;volatile&lt;/code&gt;、&lt;code&gt;final&lt;/code&gt;、&lt;code&gt;Lock&lt;/code&gt;等Java并发工具。&lt;/p&gt;
&lt;p&gt;前面介绍了JVM内存区域，JVM内存区域和Java内存模型是不同层次对内存的划分，Java内存模型侧重描述内存数据在多线程下的读写规则，一般关注&lt;strong&gt;并发&lt;/strong&gt;编程下线程如何正确读写共享数据。&lt;/p&gt;</description></item><item><title>JVM内存区域简介</title><link>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E7%AE%80%E4%BB%8B/</link><pubDate>Thu, 23 Jun 2022 11:24:43 +0000</pubDate><guid>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E7%AE%80%E4%BB%8B/</guid><description>&lt;p&gt;JVM内存区域（JVM内存结构，JVM内存布局）是Java虚拟机运行时数据的位置划分，其主要包括：程序计数器、虚拟机栈、本地方法栈、堆、方法区。&lt;/p&gt;
&lt;p&gt;后面将介绍Java内存模型，JVM内存区域和Java内存模型是不同层次对内存的划分，JVM内存区域侧重描述内存数据的结构布局，一般关注&lt;strong&gt;垃圾回收&lt;/strong&gt;（GC）及&lt;strong&gt;OOM&lt;/strong&gt;问题。&lt;/p&gt;</description></item><item><title>JVM双亲委派模型浅析</title><link>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B%E6%B5%85%E6%9E%90/</link><pubDate>Thu, 16 Jun 2022 08:51:45 +0000</pubDate><guid>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B%E6%B5%85%E6%9E%90/</guid><description>&lt;p&gt;&lt;strong&gt;双亲委派&lt;/strong&gt;(Parents Delegation)，一言以蔽之，就是：在Java虚拟机中，将类的加载行为&lt;strong&gt;委派&lt;/strong&gt;给父级(&lt;strong&gt;双亲&lt;/strong&gt;)类加载器的过程。&lt;/p&gt;
&lt;p&gt;接下来将逐一介绍Java8及Java9中的类加载器，并根据类加载器的组织结构，描述双亲委派的实现过程。&lt;/p&gt;</description></item><item><title>JVM性能调优工具汇总</title><link>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/</link><pubDate>Fri, 31 Dec 2021 10:25:57 +0000</pubDate><guid>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/jvm%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/</guid><description>&lt;h2 id="一命令行工具"&gt;一、命令行工具&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;code&gt;jps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;虚拟机进程状况工具，主要用于查找vmid，是后续命令的基础&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;code&gt;jstat&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;虚拟机统计信息监视工具，查找虚拟机进程中类加载、内存、GC等信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;code&gt;jinfo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Java配置信息工具，实时查看和调整虚拟机各项参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;code&gt;jmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Java内存映像工具，生成堆转储快照（headump、dump），与&lt;code&gt;jhat&lt;/code&gt;配合使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;code&gt;jhat&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;虚拟机堆转储快照分析工具，分析&lt;code&gt;jmap&lt;/code&gt;生成的堆转储快照文件，与&lt;code&gt;jmap&lt;/code&gt;配合使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;code&gt;jstack&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Java堆栈跟踪工具，生成虚拟机当前时刻的线程快照（threaddump、javacore）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;code&gt;jcmd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Java命令行工具集，整合了上述众多命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;code&gt;clhsdb&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;HotSpot命令行调试器，也整合了上述众多命令&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;JDK9之后的变化：&lt;code&gt;jhat&lt;/code&gt;与&lt;code&gt;clhsdb&lt;/code&gt;被移除，&lt;code&gt;clhsdb&lt;/code&gt;的功能被纳入了&lt;code&gt;jhsdb&lt;/code&gt;&lt;/p&gt;</description></item><item><title>OpenJDK8u构建指南</title><link>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/openjdk8u%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/</link><pubDate>Mon, 20 Jan 2020 17:42:00 +0000</pubDate><guid>https://luanrz.github.io/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/openjdk8u%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/</guid><description>&lt;p&gt;官方OpenJdk8u构建指南个人翻译版本。官方地址为&lt;a href="http://hg.openjdk.java.net/jdk8u/jdk8u/file/120809c21ad7/README-builds.html"&gt;README-builds.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="介绍"&gt;介绍&lt;/h1&gt;
&lt;p&gt;这个README文件包含了OpenJDK的构建说明。构建OpenJDK的源码需要一定的专业技术知识。&lt;/p&gt;</description></item></channel></rss>